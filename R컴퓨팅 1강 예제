
#R컴퓨팅 1강 
#예제1-1
1+2
1-2
1*2
1/2
#예제 1-2
a <- 1
b <- 2
a+b
a=1;b=2;a+b
#예제 1-3
a <- "use R!"
a
mode(a) #mode() : 변수 a의 속성을 확인해줌 
#예제 1-4
c <- 1>2
c
mode(c)

#1.3.2. 편집기(스크린윈도우)실행
a <- 1
b <- 2
print(a+b)

#예제 1-5
x <- c(1,2,3)
y <- c(4,5,6)
x+y
x*y
x^y
log(x^2)
z <- c(x,y)
z
x <- 1:3 #c(1,2,3)을 넣은 값과 동일
y <- 4:6 #c(4,5,6)을 넣은 값과 동일

#예제 1-6
x <- c(7,2,4,9,8,6,1,5,10,3)
sort(x) #숫자를 오름차순으로 정렬
sum(x) #합
mean(x) #표본평균
sum(x)/length(x) #표본평균
var(x) #표본분산
min(x) #최솟값
which.min(x) #최솟값이 있는 위치
summary(x) #기초 통계량 

#예제 1-7. (1,3,5,NA, 9, NA, 11) 로 이루어진 벡터 y
y <- c(1,3,5,NA, 9,NA, 11) 
mean(y)
mean(y, na.rm = TRUE) #na.rm =TRUE : 통계함수에서 NA값 미포함
is.na(y) #is.na() : 백터 내 결측값 확인 
which(is.na(y)) #which(is.na()) : 벡터 내 결측값 위치 확인 
sum(is.na(y)) #sum(is.na()) : 총 몇 개의 결측값 존재하는지 확인

1/0 #Inf : 무한대 (Infinity)
log(-1) #NaN : 이상치 (Not a Number)

is.finite(y) #벡터가 유한한 값으로 이루어졌는지 확인
is.infinite(y) #벡터가 무한한 값으로 이루어졌는지 확인 

is.nan(y) #이상치가 존재하면 TRUE로 반환

#1.4.3 도움말 보기
help(mean)
?mean
example(mean) #사용예제 확인 
help.search("mean")
??mean
help.start()

#1.5.2 R 패키지의 활성화
install.packages("rpart") #나무모형 패키지 : rpart
library(rpart)
help(package="rpart") #웹기반 패키지 설명서
library(help="rpart") #텍스트 기반 패키지 설명서
